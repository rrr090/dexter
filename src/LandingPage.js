import React, { useState, useEffect } from 'react';
import './LandingPage.css';

const LandingPage = ({ onStartApp }) => {
  const [isVisible, setIsVisible] = useState(false);
  const [activeFeature, setActiveFeature] = useState(0);
  const [currentDemo, setCurrentDemo] = useState(0);

  useEffect(() => {
    setIsVisible(true);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    const featureInterval = setInterval(() => {
      setActiveFeature(prev => (prev + 1) % 3);
    }, 3000);

    // –î–µ–º–æ –∞–Ω–∏–º–∞—Ü–∏—è
    const demoInterval = setInterval(() => {
      setCurrentDemo(prev => (prev + 1) % demoQueries.length);
    }, 4000);
    
    return () => {
      clearInterval(featureInterval);
      clearInterval(demoInterval);
    };
  }, []);

  const features = [
    {
      icon: "üí¨",
      title: "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫",
      description: "–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –ø–æ–ª—É—á–∞–π—Ç–µ —Ç–æ—á–Ω—ã–µ SQL-–∑–∞–ø—Ä–æ—Å—ã",
      color: "blue"
    },
    {
      icon: "üóÑÔ∏è",
      title: "–õ—é–±—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
      description: "–†–∞–±–æ—Ç–∞–µ—Ç —Å PostgreSQL, MySQL, Oracle, SQL Server –∏ –¥—Ä—É–≥–∏–º–∏ –°–£–ë–î",
      color: "purple"
    },
    {
      icon: "üìä",
      title: "–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      description: "–ü–æ–ª—É—á–∞–π—Ç–µ insights –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Å–µ–∫—É–Ω–¥—ã",
      color: "green"
    }
  ];

  const benefits = [
    { icon: "üìà", text: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ 10 —Ä–∞–∑", color: "blue" },
    { icon: "üë•", text: "–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã", color: "purple" },
    { icon: "üîí", text: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è", color: "green" },
    { icon: "üß†", text: "–ò–ò –ø–æ–Ω–∏–º–∞–µ—Ç –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Ç–µ–∫—Å—Ç", color: "orange" }
  ];

  const demoQueries = [
    {
      question: "–ü–æ–∫–∞–∂–∏ —Ç–æ–ø 10 –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü",
      sql: `SELECT customer_name, SUM(amount) as total_sales
FROM sales s
JOIN customers c ON s.customer_id = c.id
WHERE s.date >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
GROUP BY s.customer_id, customer_name
ORDER BY total_sales DESC
LIMIT 10;`
    },
    {
      question: "–ö–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–æ–¥–∞—é—Ç—Å—è –ª—É—á—à–µ –≤—Å–µ–≥–æ –≤ —ç—Ç–æ–º –∫–≤–∞—Ä—Ç–∞–ª–µ?",
      sql: `SELECT p.name, SUM(s.quantity) as units_sold, 
       SUM(s.amount) as revenue
FROM products p
JOIN sales s ON p.id = s.product_id
WHERE s.date >= DATE_TRUNC('quarter', NOW())
GROUP BY p.id, p.name
ORDER BY units_sold DESC;`
    },
    {
      question: "–°—Ä–∞–≤–Ω–∏ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º –∑–∞ —Ç–µ–∫—É—â–∏–π –∏ –ø—Ä–æ—à–ª—ã–π –≥–æ–¥",
      sql: `SELECT region,
       SUM(CASE WHEN YEAR(date) = YEAR(NOW()) 
           THEN amount ELSE 0 END) as current_year,
       SUM(CASE WHEN YEAR(date) = YEAR(NOW())-1 
           THEN amount ELSE 0 END) as previous_year
FROM sales
WHERE date >= DATE_SUB(NOW(), INTERVAL 2 YEAR)
GROUP BY region;`
    }
  ];

  const stats = [
    { number: "10x", label: "–ë—ã—Å—Ç—Ä–µ–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏" },
    { number: "50+", label: "–¢–∏–ø–æ–≤ –ë–î" },
    { number: "99.9%", label: "–¢–æ—á–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤" },
    { number: "24/7", label: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞" }
  ];

  
;

  return (
    <div className="landing-container">
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
      <div className="animated-background">
        {[...Array(15)].map((_, i) => (
          <div
            key={i}
            className="floating-element"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 2}s`,
              animationDuration: `${Math.random() * 3 + 2}s`
            }}
          />
        ))}
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className={`landing-header ${isVisible ? 'fade-in' : ''}`}>
        <nav className="nav-container">
          <div className="logo">
            <span className="logo-icon">ü§ñ</span>
            <span className="logo-text">dexter</span>
          </div>
          <div className="nav-links">
            <a href="#features">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a>
            <a href="#demo">–î–µ–º–æ</a>
            <a href="#benefits">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</a>
            <a href="#pricing">API</a>
            <button className="nav-cta" onClick={onStartApp}>
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å
            </button>
          </div>
        </nav>
      </header>

      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <section className={`hero-section ${isVisible ? 'slide-up' : ''}`}>
        <div className="hero-content">
          <div className="hero-badge">
            <span className="badge-icon">‚ö°</span>
            <span>Powered by shai.pro</span>
          </div>
          
          <h1 className="hero-title">
            <span className="gradient-text">dexter</span>
          </h1>
          
          <p className="hero-subtitle">
            –ê–≥–µ–Ω—Ç –ø–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ë–î
          </p>
          
          <p className="hero-description">
            –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –≤ SQL-–∑–∞–ø—Ä–æ—Å—ã —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–¥–æ–≤–æ–≥–æ –ò–ò. 
            –ü–æ–ª—É—á–∞–π—Ç–µ insights –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–≥–Ω–æ–≤–µ–Ω–Ω–æ.
          </p>
          
          <div className="hero-actions">
            <button className="cta-primary" onClick={onStartApp}>
              <a href="https://hackathon.shai.pro/workflow/U9auCx5fkRjaB4Z1">üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É</a>
              <span className="button-arrow">‚Üí</span>
            </button>
            <button className="cta-secondary">
              <span>üìñ API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</span>
            </button>
          </div>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="stats-grid">
            {stats.map((stat, index) => (
              <div key={index} className="stat-item">
                <div className="stat-number">{stat.number}</div>
                <div className="stat-label">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–µ–º–æ */}
      <section id="demo" className="demo-section">
        <div className="section-content">
          <div className="section-header">
            <h2>üéØ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å</h2>
            <p>–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ dexter –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –≤ SQL</p>
          </div>
          
          <div className="demo-container">
            <div className="demo-input">
              <div className="demo-header">
                <span className="demo-icon">üí¨</span>
                <span>–í–∞—à –∑–∞–ø—Ä–æ—Å:</span>
              </div>
              <div className="demo-query">
                {demoQueries[currentDemo].question}
              </div>
            </div>
            
            <div className="demo-arrow">
              <div className="arrow-line"></div>
              <div className="arrow-head">‚Üí</div>
              <div className="processing-text">dexter –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç...</div>
            </div>
            
            <div className="demo-output">
              <div className="demo-header">
                <span className="demo-icon">üóÑÔ∏è</span>
                <span>SQL –∑–∞–ø—Ä–æ—Å:</span>
              </div>
              <pre className="demo-sql">
                <code>{demoQueries[currentDemo].sql}</code>
              </pre>
            </div>
          </div>

          <div className="demo-controls">
            {demoQueries.map((_, index) => (
              <button
                key={index}
                className={`demo-dot ${index === currentDemo ? 'active' : ''}`}
                onClick={() => setCurrentDemo(index)}
              />
            ))}
          </div>
        </div>
      </section>

      {/* –§—É–Ω–∫—Ü–∏–∏ */}
      <section id="features" className="features-section">
        <div className="section-content">
          <div className="section-header">
            <h2>‚ö° –ú–æ—â–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
            <p>–í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏</p>
          </div>
          
          <div className="features-grid">
            {features.map((feature, index) => (
              <div 
                key={index}
                className={`feature-card ${activeFeature === index ? 'active' : ''} ${feature.color}`}
              >
                <div className="feature-icon">{feature.icon}</div>
                <h3 className="feature-title">{feature.title}</h3>
                <p className="feature-description">{feature.description}</p>
                <div className="feature-glow"></div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      <section id="benefits" className="benefits-section">
        <div className="section-content">
          <div className="benefits-container">
            <div className="benefits-header">
              <h2>üéØ –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç dexter</h2>
              <p>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</p>
            </div>
            
            <div className="benefits-grid">
              {benefits.map((benefit, index) => (
                <div key={index} className={`benefit-item ${benefit.color}`}>
                  <div className="benefit-icon">{benefit.icon}</div>
                  <p className="benefit-text">{benefit.text}</p>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>



      {/* API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è */}
      <section id="pricing" className="api-section">
        <div className="section-content">
          <div className="api-grid">
            <div className="api-info">
              <h2>üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ API</h2>
              <p className="api-description">
                dexter —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ shai.pro –∏ –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –≤–∞—à–∏ 
                —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–µ–∑ REST API.
              </p>
              
              <div className="api-features">
                <div className="api-feature">
                  <span className="feature-check">‚úÖ</span>
                  <span>–ü—Ä–æ—Å—Ç–∞—è REST API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</span>
                </div>
                <div className="api-feature">
                  <span className="feature-check">‚úÖ</span>
                  <span>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ API –∫–ª—é—á–∏</span>
                </div>
                <div className="api-feature">
                  <span className="feature-check">‚úÖ</span>
                  <span>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–µ–±—Ö—É–∫–æ–≤</span>
                </div>
                <div className="api-feature">
                  <span className="feature-check">‚úÖ</span>
                  <span>–ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</span>
                </div>
              </div>
              
              <button className="api-cta" onClick={onStartApp}>
                üîë –ü–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á
              </button>
            </div>
            
            <div className="api-code">
              <div className="code-window">
                <div className="code-header">
                  <div className="code-dots">
                    <div className="dot red"></div>
                    <div className="dot yellow"></div>
                    <div className="dot green"></div>
                  </div>
                  <div className="code-title">POST /api/v1/query</div>
                </div>
                <div className="code-content">
                  <pre>{`{
  "query": "–ü–æ–∫–∞–∂–∏ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º",
  "database": "sales_db",
  "format": "json"
}

// Response
{
  "sql": "SELECT region, SUM(amount) 
          FROM sales 
          GROUP BY region",
  "results": [
    {"region": "–ê—Å—Ç–∞–Ω–∞", "sum": 1250000},
    {"region": "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫", "sum": 980000}
  ],
  "execution_time": "0.3s"
}`}</pre>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA —Å–µ–∫—Ü–∏—è */}
      <section className="cta-section">
        <div className="cta-content">
          <h2>üöÄ –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</h2>
          <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –∫–æ–º–ø–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç dexter</p>
          <div className="cta-buttons">
            <button className="cta-primary large" onClick={onStartApp}>
              <a href="https://hackathon.shai.pro/workflow/U9auCx5fkRjaB4Z1">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ</a>
              <span className="button-arrow">‚Üí</span>
            </button>
            <button className="cta-outline">
              <span>üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</span>
            </button>
          </div>
        </div>
      </section>

      {/* –§—É—Ç–µ—Ä */}
      <footer className="landing-footer">
        <div className="footer-content">
          <div className="footer-main">
            <div className="footer-brand">
              <div className="footer-logo">
                <span className="logo-icon">ü§ñ</span>
                <span className="logo-text">dexter</span>
              </div>
              <p>–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</p>
            </div>
            
            <div className="footer-links">
              <div className="footer-column">
                <h4>–ü—Ä–æ–¥—É–∫—Ç</h4>
                <a href="#features">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a>
                <a href="#demo">–î–µ–º–æ</a>
                <a href="#pricing">–¶–µ–Ω—ã</a>
                <a href="#">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</a>
              </div>
              <div className="footer-column">
                <h4>–†–µ—Å—É—Ä—Å—ã</h4>
                <a href="#">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a>
                <a href="#">API Reference</a>
                <a href="#">–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞</a>
                <a href="#">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
              </div>
              <div className="footer-column">
                <h4>–ö–æ–º–ø–∞–Ω–∏—è</h4>
                <a href="#">–û –Ω–∞—Å</a>
                <a href="#">–ë–ª–æ–≥</a>
                <a href="#">–ö–∞—Ä—å–µ—Ä–∞</a>
                <a href="#">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
              </div>
            </div>
          </div>
          
          <div className="footer-bottom">
            <p>&copy; 2025 dexter. Powered by shai.pro</p>
            <div className="footer-social">
              <a href="#">üîó LinkedIn</a>
              <a href="#">üê¶ Twitter</a>
              <a href="#">üìß Email</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default LandingPage;